Rebar OpenStack Environment (ROSE)
==================================

ROSE runs OpenStack DevStack to setup a single master, multinode cluster as per https://docs.openstack.org/devstack/latest/; consequently, the install uses the same superuser grants that are required by DevStack.

THIS IS NOT A PRODUCTION INSTALLATION 

The ROSE content follows other Digital Rebar cluster installation patterns: a shared profile must be created with the name of the profile defined in the Param 'rose/profile-name' and then machines must have that profile to use a ROSE workflow.  A sample workflow and profile are provided as examples.

The system is designed for testing use so Sledgehammer is the base install.

Limitations
-----------

* The current system is hardwired to use eth0
* DevStack only supports a single master

Installing via the CLI
----------------------

Before running ROSE, you must install the `Ubuntu 18.04` bootenv (see :ref:`rs_quickstart`)

The following steps will install the required content for ROSE

  ::

    # Get code
    git clone https://github.com/digitalrebar/provision-content
    cd provision-content/rose

    # KRIB content install
    drpcli contents bundle rose.yaml
    drpcli contents upload rose.yaml

The contents include the `rose-install-cluster` workflow.  Changing a discovered machine's workflow to that workflow will result in an OpenStack deployment.

To set the workflow via the CLI, use `drpcli machines update [machine uuid] '{"Workflow":"rose-install-cluster"}'` with the `[machine uuid]` set correctly.

For more details, please review https://www.youtube.com/watch?v=FbxeYNk3spo.

.. note:: The machine MUST have internet access and sufficient resources (32 Gb RAM) to run DevStack.

Terraform
---------

You can run ROSE via Terraform on Digital Rebar Provision.  To use Terraform with Digital Rebar, consult :ref:`component_terraform`.

The reference plan can be found at https://github.com/digitalrebar/provision-content/tree/master/integrations/rose

Todo:
-----

* Compute notes should wait for Controller to finish
* Send final output from DevStack run
* Support for floating networks has been enabled
* Explicit fixed network range has been added