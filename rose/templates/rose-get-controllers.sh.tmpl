#!/usr/bin/env bash
# Build Select OpenStack Controllers
set -e

# Get access and who we are.
{{template "setup.tmpl" .}}

export RS_UUID="{{.Machine.UUID}}"
export RS_IP="{{.Machine.Address}}"

echo "Elect and wait for the controllers"

{{if .ParamExists "rose/cluster-profile" -}}
CLUSTER_PROFILE={{.Param "rose/cluster-profile"}}
PROFILE_TOKEN={{.GenerateProfileToken (.Param "rose/cluster-profile") 7200}}
{{else -}}
echo "Missing rose/cluster-profile on the machine!"
exit 1
{{end -}}

# Get the number of servers to create
ROSE_CONTROLLER_COUNT=1
echo "Creating $ROSE_CONTROLLER_COUNT controllers"

ROSE_CONTROLLERS_PARAM="rose/cluster-controllers"

echo "Electing Controllers to $CLUSTER_PROFILE"

drpcli -T "$PROFILE_TOKEN" profiles add "$CLUSTER_PROFILE" param "$ROSE_CONTROLLERS_PARAM" to "[]" || true
CL=$(get_param $ROSE_CONTROLLERS_PARAM)
while [[ $(jq length <<< "$CL") -lt ${ROSE_CONTROLLER_COUNT} ]]; do
  echo "electing a leader..."
  NEW_LEADERS=$(jq ". += [{\"Name\": \"{{.Machine.Name}}\", \"Uuid\": \"{{.Machine.Uuid}}\", \"Address\": \"{{.Machine.Address}}\"}]" <<< "$CL")
  drpcli -r "$CL" -T "$PROFILE_TOKEN" profiles set "$CLUSTER_PROFILE" param "$ROSE_CONTROLLERS_PARAM" to "$NEW_LEADERS" 2>/dev/null >/dev/null && break
  # sleep is is a hack but it allows for backoffs
  sleep 1
  # get the current cluster leaders
  CL=$(get_param $ROSE_CONTROLLERS_PARAM)
done

# Set machine icon and color for ROSE cluster building
drpcli machines update $RS_UUID "{\"Meta\":{\"color\":\"yellow\", \"icon\": \"shower\"} }" | jq .Meta

exit 0