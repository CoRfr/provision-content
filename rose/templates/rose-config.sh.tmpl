#!/usr/bin/env bash
# Rebar OpenStack Environment (ROSE) Installer
set -e

# Get access and who we are.
{{template "setup.tmpl" .}}

echo "Configure OpenStack controller and compute..."

{{if .ParamExists "rose/cluster-profile" -}}
CLUSTER_PROFILE={{.Param "rose/cluster-profile"}}
PROFILE_TOKEN={{.GenerateProfileToken (.Param "rose/cluster-profile") 7200}}
{{else -}}
echo "Missing rose/cluster-profile on the machine!"
exit 1
{{end -}}

# devstack common setup
STACK_CONFIG="./local.conf"
if [[ -e $STACK_CONFIG ]]; then

  drpcli machines update $RS_UUID "{\"Meta\":{\"color\":\"yellow\", \"icon\": \"cloud\"}}" | jq .Meta

  echo "creating and elevating {{.Param "rose/user" -}} user"
  sudo useradd -s /bin/bash -d /opt/stack -m {{.Param "rose/user" -}}
  echo "{{.Param "rose/user" -}} ALL=(ALL) NOPASSWD: ALL" | sudo tee /etc/sudoers.d/{{.Param "rose/user" -}}
  sudo su - {{.Param "rose/user" -}}

  echo "cloning {{.Param "rose/source" -}}"
  git clone {{.Param "rose/source" -}}
  cd devstack

  cat $STACK_CONFIG
else
  echo "skipping {{.Param "rose/user" -}} user create and git clone, $STACK_CONFIG exists "
fi

{{template "krib-lib.sh.tmpl" .}}
ROSE_CONTROLLERS_PARAM="rose/cluster-controllers"

CONTROLLER_INDEX=$(find_me $ROSE_CONTROLLERS_PARAM "Uuid" $RS_UUID)
echo "My Controller index is $CONTROLLER_INDEX"
if [[ $CONTROLLER_INDEX != notme ]] ; then

  echo "I am controller - run devstack"
  SERVICE_TOKEN="NOTSECURE"

  if [[ $CONTROLLER_INDEX == 0 ]] ; then

    echo "INSTALL ME SOME OPENSTACK CONTROLLER!"

  fi

  MAX_WAIT_SECONDS=300
  INCREMENT_SECONDS=10
  N=0
  READY=false

  while [ "$READY" != "true" ]; do
    READY=true
    if [ "$READY" != "true" ]; then
      sleep ${INCREMENT_SECONDS}s
    fi
  done

  if [[ $CONTROLLER_INDEX == 0 ]] ; then
    drpcli -T $PROFILE_TOKEN profiles add $CLUSTER_PROFILE param rose/service-token to "$SERVICE_TOKEN"
    drpcli machines update $RS_UUID "{\"Meta\":{\"color\":\"purple\", \"icon\": \"cloud\"}}" | jq .Meta
  else
    drpcli machines update $RS_UUID "{\"Meta\":{\"color\":\"green\", \"icon\": \"cloud upload\"}}" | jq .Meta
  fi

else

  echo "I am a compute node - waitrun kubeadm join when defined"

  JC=$(wait_for_variable $ROSE_JOIN_PARAM)

  echo "Running: $JC"
  $JC

  # Set machine icon and color for ROSE cluster building
  drpcli machines update $RS_UUID "{\"Meta\":{\"color\":\"green\", \"icon\": \"cloud download\"}}" | jq .Meta

fi

echo "Finished successfully"
exit 0