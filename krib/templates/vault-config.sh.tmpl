#!/usr/bin/env bash


# Build a vault cluster
set -e

# Get access and who we are.
{{template "setup.tmpl" .}}

# Skip the remainder of this template if this host is not a master in a selective-master deployment
{{template "krib-skip-if-not-master.tmpl" .}}

export RS_UUID="{{.Machine.UUID}}"
export RS_IP="{{.Machine.Address}}"

VAULT_VERSION="{{ .Param "vault/version" }}"

# these need to be before krib-lib template
{{if .ParamExists "vault/cluster-profile" -}}
CLUSTER_PROFILE={{.Param "vault/cluster-profile"}}
PROFILE_TOKEN={{.GenerateProfileToken (.Param "vault/cluster-profile") 7200}}
{{else -}}
xiterr 1 "Missing vault/cluster-profile on the machine!"
{{end -}}

{{template "krib-lib.sh.tmpl" .}}

{{if .ParamExists "vault/servers" -}}
# Ensure that the vault systemd service specifies all vault nodes using retry-join
setup_retry_join() {
  echo "Setting up retry_join..."
  {{- range $elem := .Param "vault/servers"}}
  PEER={{ $elem.Address }}
  if [[ ! `grep $PEER /etc/systemd/system/vault.service` ]]; then
    sed -i "/ExecStart=/ a \    -retry-join=$PEER \\\\" /etc/systemd/system/vault.service
  fi
  {{ end -}}
}

setup_encryption() {
  echo "Setting up encryption..."
  VAULT_ENCRYPTION_KEY={{ .Param "vault/encryption-key" }}
  if [[ ! `grep encrypt /etc/systemd/system/vault.service` ]]; then
    sed -i "/ExecStart=/ a \    -encrypt=$VAULT_ENCRYPTION_KEY \\\\" /etc/systemd/system/vault.service
  fi
}
{{ end -}}

echo "Configure the vault cluster"

setup_retry_join
setup_encryption

systemctl daemon-reload
systemctl restart vault
systemctl status vault

exit 0
