---
Description: "DEV: Reset Profile values between Test Runs"
Name: "krib-dev-reset"
Documentation: |
  Clears Created Params: krib/*, etcd/*
RequiredParams:
  - krib/cluster-profile
  - etcd/cluster-profile
OptionalParams:
  - krib/cluster-is-production
  - unsafe/rs-password
Templates:
- Contents: |-
    #!/bin/bash
    # Reset CA params
    set -e
    # we need a random backoff to avoid races.
    SLEEP=$[ ( $RANDOM % 25 ) ]
    sleep $SLEEP
    declare -a WIPE_PARAMS=('etcd/client-ca-name' 'etcd/client-ca-pw' 'etcd/peer-ca-name' 'etcd/peer-ca-pw' 'etcd/server-ca-name' 'etcd/server-ca-pw')
    {{if .ParamExists "etcd/cluster-profile" -}}
    CLUSTER_PROFILE={{.Param "etcd/cluster-profile"}}
    PROFILE_TOKEN={{.GenerateProfileToken (.Param "etcd/cluster-profile") 7200}}
    {{else -}}
    echo "Missing etcd/cluster-profile on the machine!"
    exit 1
    {{end -}}
    {{template "setup.tmpl" .}}
    echo "Checking CA"
    echo "drpcli machines runaction $RS_UUID getca certs/root {{.Param "etcd/name"}}-server-ca"
    CA_TEST=$(drpcli machines runaction $RS_UUID getca certs/root {{.Param "etcd/name"}}-server-ca) || true
    if [[ $CA_TEST != "" && $CA_TEST != null ]] ; then
      echo "CA contains $CA_TEST"
      echo "HALTING!!! YOU MUST RESET THE CA BY HAND!"  Run:
      echo "==========================================================================="
      echo "drpcli plugins runaction certs deleteroot certs/root {{.Param "etcd/name"}}-client-ca"
      echo "drpcli plugins runaction certs deleteroot certs/root {{.Param "etcd/name"}}-server-ca"
      echo "drpcli plugins runaction certs deleteroot certs/root {{.Param "etcd/name"}}-peer-ca"
      echo "==========================================================================="
      echo "Try to add unsafe/rs-password with value: your-non-default-password, on your profile and re-run the krib-reset-cluster workflow"
      
      sleep 1
      {{if .ParamExists "unsafe/rs-password"}}
        PASSWORD="{{.Param "unsafe/rs-password"}}"
      {{else}}
        PASSWORD="r0cketsk8ts"
      {{end}}
      HOLD_TOKEN=$RS_TOKEN
      unset RS_TOKEN
      drpcli -U "rocketskates" -P "$PASSWORD" plugins runaction certs deleteroot certs/root {{.Param "etcd/name"}}-client-ca
      drpcli -U "rocketskates" -P "$PASSWORD" plugins runaction certs deleteroot certs/root {{.Param "etcd/name"}}-server-ca
      drpcli -U "rocketskates" -P "$PASSWORD" plugins runaction certs deleteroot certs/root {{.Param "etcd/name"}}-peer-ca
      export RS_TOKEN=$HOLD_TOKEN
    else
      echo "  No CA root detected - no reset required"
    fi
    {{template "krib-dev-reset.sh.tmpl" .}}
    echo "done CA params reset"
  Name: CA clear
- Contents: |-
    #!/bin/bash
    # Reset etcd params
    set -e
    declare -a WIPE_PARAMS=('etcd/servers' 'etcd/servers-done')
    declare CLUSTER_TYPE="etcd"
    {{template "setup.tmpl" .}}
    {{if .ParamExists "etcd/cluster-profile" -}}
    CLUSTER_PROFILE={{.Param "etcd/cluster-profile"}}
    PROFILE_TOKEN={{.GenerateProfileToken (.Param "etcd/cluster-profile") 7200}}
    {{else -}}
    echo "Missing etcd/cluster-profile on the machine!"
    exit 1
    {{end -}}
    {{template "krib-dev-reset.sh.tmpl" .}}
    echo "done etcd params reset"
  Name: etcd-reset
- Contents: |-
    #!/bin/bash
    # Reset consul params
    set -e
    declare -a WIPE_PARAMS=('consul/servers' 'consul/servers-done' 'consul/encryption-key')
    declare CLUSTER_TYPE="consul"
    {{template "setup.tmpl" .}}
    {{if .ParamExists "consul/cluster-profile" -}}
    CLUSTER_PROFILE={{.Param "consul/cluster-profile"}}
    PROFILE_TOKEN={{.GenerateProfileToken (.Param "consul/cluster-profile") 7200}}
    {{else -}}
    echo "Missing consul/cluster-profile on the machine!"
    exit 1
    {{end -}}
    {{template "krib-dev-reset.sh.tmpl" .}}
    echo "done consul params reset"
  Name: consul-reset  
- Contents: |-
    #!/bin/bash
    # Reset KRIB params
    set -e
    declare -a WIPE_PARAMS=('krib/cluster-masters' 'krib/cluster-join-command' 'krib/cluster-admin-conf' 'krib/cluster-master-certs' 'krib/cluster-bootstrap-token' 'krib/cluster-kubeadm-cfg')
    {{template "setup.tmpl" .}}
    {{if .ParamExists "krib/cluster-profile" -}}
    CLUSTER_PROFILE={{.Param "krib/cluster-profile"}}
    PROFILE_TOKEN={{.GenerateProfileToken (.Param "krib/cluster-profile") 7200}}
    {{else -}}
    echo "Missing krib/cluster-profile on the machine!"
    exit 1
    {{end -}}
    {{template "krib-dev-reset.sh.tmpl" .}}
    drpcli machines update $RS_UUID "{\"Meta\":{\"color\":\"black\", \"icon\": \"server\"}}" | jq .Meta
    echo "done KRIB params reset"
  Name: KRIB clear
- Contents: |-
    #!/bin/bash

    # We might want to re-initialize a cluster using this machine, but without any
    # remanants of the old cluster. This script brutally removes any cluster-specific content,
    # and it's expected that you'll reinstall docker/containerd and kubernetes before rebuilding
 
    kubeadm reset -f
    systemctl stop etcd || echo "I'm not a master, don't need to stop etcd"
    systemctl stop vault-kms-plugin || echo "vault-kms-plugin not running, no need to stop"
    systemctl stop vault || echo "vault not running, no need to stop"
    systemctl stop consul-server || echo "consul-server not running, no need to stop"
    systemctl stop consul-agent || echo "consul-agent not running, no need to stop"

    # Whether we're using containerd or dockerd, kill either
    pkill containerd || pkill dockerd
    
    # Wipe out any persistent content
    rm -rf /var/lib/cni/
    rm -rf /var/lib/kubelet/*
    rm -rf /etc/cni/
    rm -rf /docker/etcd/*
    rm -rf /var/lib/containerd/*
    rm -rf /var/lib/docker/*    
    rm -rf /var/lib/consul/data
    rm -rf /var/log/containers/* || echo "/var/log/containers doesn't exist, possibly we weren't using containerd"

    iptables -F && iptables -t nat -F && iptables -t mangle -F && iptables -X
    
  Name: KRIB wipe machine for cluster reinstall  
Meta:
  icon: "ship"
  color: "orange"
  title: "Community Content"
  feature-flags: "sane-exit-codes"
