---
Name: "helm/charts"
Description: "Install Helm Charts"
Documentation: |
  Array of charts to install via Helm.  The list will be followed in order.

  Work is idempotent: No action is taken if charts are already installed.

  Fields: chart and name are required.

  Options exist to inject additional control flags into helm install instructions:

  * name: name of the chart (required)
  * chart: reference of the chart (required) - may rely on repo, path or other helm install [chart] standard
  * namespace: kubernetes namespace to use for chart (defaults to none)
  * params: map of parameters to include in the helm install (optional).  Keys and values are converted to --[key] [value] in the install instruction.
  * sleep: time to wait after install (defaults to 10)
  * wait: wait for name (and namespace if provided) to be running before next action
  * prekubectl (optional) array of kubectl [request] commands to run before the helm install
  * postkubectl (optional) array of kubectl [request] commands to run after the helm install
  * targz (optional) provides a location for a tar.gz file containing charts to install. Path is relative.

  example:

    ::

      [
        {
          "chart": "stable/mysql",
          "name": "mysql"
        }, {
          "chart": "istio-1.0.1/install/kubernetes/helm/istio",
          "name": "istio",
          "targz": "https://github.com/istio/istio/releases/download/1.0.1/istio-1.0.1-linux.tar.gz",
          "namespace": "istio-system",
          "params": {
            "set": "sidecarInjectorWebhook.enabled=true"
          },
          "sleep": 10,
          "wait": true,
          "kubectlbefore": ["get nodes"],
          "kubectlafter": ["get nodes"]
        }
      ]

Schema:
  type: "array"
  default: []
  items:
    type: "object"
    required:
      - "chart"
      - "name"
    properties:
      targz:
        type: "string"
      chart:
        type: "string"
      name:
        type: "string"
      namespace:
        type: "string"
      params:
        type: "object"
        default: {}
        properties:
          repo:
            type: "string"
          values:
            type: "string"
          set:
            type: "string"
      sleep:
        type: "integer"
        default: 10
      wait:
        type: "boolean"
        default: false
      kubectlbefore:
        type: "array"
        default: []
        items:
          type: "string"
      kubectlafter:
        type: "array"
        default: []
        items:
          type: "string"
Meta:
  color: "blue"
  icon: "map"
  title: "Community Content"
