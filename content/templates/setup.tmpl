#!/usr/local/bin/env bash
# Helper to setup DRP tasks for other templates
#
###
#  This is a BASH script snippet intended to be run inside other BASH templates.
#
#  Simple helper to prep a system with DRPCLI and JQ.  If not already installed,
#  download and install the `drpcli` and `jq` binaries in /usr/local/bin and then
#  source our `helper` tools
#
#  To use this in other templates, simply specify:
#
#         \{\{template "setup.tmpl" .\}\}
#
#  without the backslashes.
###

set -e
###
#  if we want debugging of our scripts, set the Param to true
#  also set shell variable for script reuse if desired for further
#  debugging
###
{{ if .ParamExists "rs-debug-enable" }}
{{ if eq (.Param "rs-debug-enable") true }}
# use in shell as: [[ $RS_DEBUG_ENABLE ]] && echo "debugging"
RS_DEBUG_ENABLE="{{.Param "rs-debug-enable"}}"
set -x
{{ end }}
{{ end }}

# We pretty much always need these parameters set, but
# don't overwrite them if they already exist.
[[ $RS_TOKEN ]] || export RS_TOKEN="{{.GenerateInfiniteToken}}"
[[ $RS_ENDPOINT ]] || export RS_ENDPOINT="{{.ApiURL}}"
[[ $RS_UUID ]] || export RS_UUID="{{.Machine.UUID}}"

function fixup_path() {
  local _add_path
  for _add_path in $(echo $* | sed 's/[:,]/ /g')
  do
    mkdir -p $_add_path
    # inject colons to avoid partial match failures
    grep -q ":$_add_path" <<< ":$FOO:" || export FOO="$FOO:$_add_path"
  done
}

fixup_path /usr/local/bin /usr/sbin /sbin

# TODO: we need to make drpcli/jq grab smarter to be a little
#       more tolerant of OS arch/type - and grab the right one
for tool in drpcli jq; do
    which "$tool" &>/dev/null && continue
    echo "Installing $tool in /usr/local/bin"
    case $tool in
        drpcli) curl -sfLo "/usr/local/bin/$tool" "{{.ProvisionerURL}}/files/drpcli.amd64.linux";;
        jq)     curl -sfLo "/usr/local/bin/$tool" "{{.ProvisionerURL}}/files/jq";;
    esac
    chmod 755 "/usr/local/bin/$tool"
done
unset tool

if [[ -r ./helper ]]; then
    . ./helper
    __sane_exit
fi
